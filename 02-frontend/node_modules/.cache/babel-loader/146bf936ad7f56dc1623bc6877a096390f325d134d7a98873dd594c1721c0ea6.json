{"ast":null,"code":"var _jsxFileName = \"Z:\\\\React Lessons\\\\Challenges\\\\github\\\\usePopcorn\\\\02-frontend\\\\src\\\\components\\\\SelectedMovie.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Loader } from \"./Loader\";\nimport { KEY } from \"./App\";\nimport RatingStars from \"./Utils/RatingStars\";\nimport { apiClient } from \"./Service/MovieService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SelectedMovie({\n  selectedId,\n  onClearMovie,\n  onAddWatched,\n  watched\n}) {\n  _s();\n  var _watched$find;\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(0);\n  const isWatched = watched.map(item => item.imdbID).includes(selectedId);\n  const watchedUserRating = (_watched$find = watched.find(movie => movie.imdbID === selectedId)) === null || _watched$find === void 0 ? void 0 : _watched$find.userRating;\n  function saveWatched(movie) {\n    apiClient.post(`/watchedMovies`, movie);\n  }\n  function handleAddWatched() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating\n    };\n    onAddWatched(newWatchedMovie);\n    onClearMovie();\n  }\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n  console.log(title, year);\n  useEffect(function () {\n    function callback(e) {\n      if (e.code === \"Escape\") {\n        onClearMovie();\n      }\n    }\n    document.addEventListener(\"keydown\", callback);\n    return function () {\n      document.removeEventListener(\"keydown\", callback);\n    };\n  }, [onClearMovie]);\n  useEffect(function () {\n    async function getMovieDetails() {\n      setIsLoading(true);\n      const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`);\n      const data = await res.json();\n      setMovie(data);\n      setIsLoading(false);\n    }\n    getMovieDetails();\n  }, [selectedId]);\n  useEffect(function () {\n    if (!title) return;\n    document.title = `Movie | ${title}`;\n    return function () {\n      document.title = \"usePopcorn\";\n    };\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: () => onClearMovie(),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${movie} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: released\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), imdbRating, \" IMDb rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: !isWatched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(RatingStars, {\n              maxRating: 10,\n              size: 24,\n              onSetRating: setUserRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), userRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add\",\n              onClick: handleAddWatched,\n              children: \"+ Add to list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You already rated this movie \\u2B50\", watchedUserRating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectedMovie, \"2epO6vxbqwwGcJL85pLBS3qDfbY=\");\n_c = SelectedMovie;\nvar _c;\n$RefreshReg$(_c, \"SelectedMovie\");","map":{"version":3,"names":["useEffect","useState","Loader","KEY","RatingStars","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectedMovie","selectedId","onClearMovie","onAddWatched","watched","_s","_watched$find","movie","setMovie","isLoading","setIsLoading","userRating","setUserRating","isWatched","map","item","imdbID","includes","watchedUserRating","find","saveWatched","post","handleAddWatched","newWatchedMovie","title","year","poster","imdbRating","Number","runtime","split","at","Title","Year","Poster","Runtime","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","console","log","callback","e","code","document","addEventListener","removeEventListener","getMovieDetails","res","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxRating","size","onSetRating","_c","$RefreshReg$"],"sources":["Z:/React Lessons/Challenges/github/usePopcorn/02-frontend/src/components/SelectedMovie.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { Loader } from \"./Loader\";\r\nimport { KEY } from \"./App\";\r\nimport RatingStars from \"./Utils/RatingStars\";\r\nimport { apiClient } from \"./Service/MovieService\";\r\n\r\nexport function SelectedMovie({\r\n  selectedId,\r\n  onClearMovie,\r\n  onAddWatched,\r\n  watched,\r\n}) {\r\n  const [movie, setMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [userRating, setUserRating] = useState(0);\r\n\r\n  const isWatched = watched.map((item) => item.imdbID).includes(selectedId);\r\n  const watchedUserRating = watched.find(\r\n    (movie) => movie.imdbID === selectedId\r\n  )?.userRating;\r\n\r\n  function saveWatched(movie) {\r\n    apiClient.post(`/watchedMovies`, movie);\r\n  }\r\n\r\n  function handleAddWatched() {\r\n    const newWatchedMovie = {\r\n      imdbID: selectedId,\r\n      title,\r\n      year,\r\n      poster,\r\n      imdbRating: Number(imdbRating),\r\n      runtime: Number(runtime.split(\" \").at(0)),\r\n      userRating,\r\n    };\r\n    onAddWatched(newWatchedMovie);\r\n    onClearMovie();\r\n  }\r\n\r\n  const {\r\n    Title: title,\r\n    Year: year,\r\n    Poster: poster,\r\n    Runtime: runtime,\r\n    imdbRating,\r\n    Plot: plot,\r\n    Released: released,\r\n    Actors: actors,\r\n    Director: director,\r\n    Genre: genre,\r\n  } = movie;\r\n\r\n  console.log(title, year);\r\n\r\n  useEffect(\r\n    function () {\r\n      function callback(e) {\r\n        if (e.code === \"Escape\") {\r\n          onClearMovie();\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"keydown\", callback);\r\n\r\n      return function () {\r\n        document.removeEventListener(\"keydown\", callback);\r\n      };\r\n    },\r\n    [onClearMovie]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      async function getMovieDetails() {\r\n        setIsLoading(true);\r\n        const res = await fetch(\r\n          `http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`\r\n        );\r\n        const data = await res.json();\r\n        setMovie(data);\r\n        setIsLoading(false);\r\n      }\r\n      getMovieDetails();\r\n    },\r\n    [selectedId]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      if (!title) return;\r\n      document.title = `Movie | ${title}`;\r\n\r\n      return function () {\r\n        document.title = \"usePopcorn\";\r\n      };\r\n    },\r\n    [title]\r\n  );\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <header>\r\n            <button className=\"btn-back\" onClick={() => onClearMovie()}>\r\n              &larr;\r\n            </button>\r\n            <img src={poster} alt={`Poster of ${movie} movie`} />\r\n            <div className=\"details-overview\">\r\n              <h2>{title}</h2>\r\n              <p>{released}</p>\r\n              <p>{genre}</p>\r\n              <p>\r\n                <span>⭐</span>\r\n                {imdbRating} IMDb rating\r\n              </p>\r\n            </div>\r\n          </header>\r\n\r\n          <section>\r\n            {\r\n              <div className=\"rating\">\r\n                {!isWatched ? (\r\n                  <>\r\n                    <RatingStars\r\n                      maxRating={10}\r\n                      size={24}\r\n                      onSetRating={setUserRating}\r\n                    />\r\n                    {userRating > 0 && (\r\n                      <button className=\"btn-add\" onClick={handleAddWatched}>\r\n                        + Add to list\r\n                      </button>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <p>You already rated this movie ⭐{watchedUserRating}</p>\r\n                )}\r\n              </div>\r\n            }\r\n            <p>\r\n              <em>{plot}</em>\r\n            </p>\r\n            <p>Starring {actors}</p>\r\n            <p>Directed by {director}</p>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}